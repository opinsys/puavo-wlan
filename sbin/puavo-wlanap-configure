#!/usr/bin/ruby

require 'resolv'
require 'syslog'
require 'yaml'

def get_serverip
  File.open('/etc/ltsp/getltscfg-cluster.conf').each do |line|
    match = line.match(/^SERVER=(.*)$/)
    if match
      return match[1]
    end
  end
  Syslog.err('%s', 'Server IP is not known, aborting')
  exit(1)
end

Syslog.open(File.basename($0), Syslog::LOG_PID)

#
# Determine the boot server where OpenVPN and RADIUS servers
# should be listening.
#

Syslog.info('%s', 'Checking wlan configuration')

server_ip   = get_serverip()
server_fqdn = nil

# recover even if DNS is down
until server_fqdn do
  begin
    server_fqdn = Resolv.getname(server_ip)
  rescue
    Syslog.warn('%s', 'Problem reaching DNS server')
    sleep 10
  end
end

#
# Get server specific wlantype, password and ssid settings.
#

conf = (YAML::load_file("/etc/puavo-wlanap/init.conf") || {}) rescue {}

wlanif    = conf['wlanif']
wlantype  = conf['wlantype']
password  = conf['password']
ssid      = conf['ssid']
puavoroot = conf['puavoroot']
wlan_ca   = conf['wlan-ca']
wlan_key  = conf['wlan-key']
wlan_cert = conf['wlan-cert']

File.open("/etc/puavo-wlanap/wlan-ca.crt", "w") do |file|
  file.puts(wlan_ca)
end

File.open("/etc/puavo-wlanap/wlan-client.key", "w", 0600) do |file|
  file.puts(wlan_key)
end

File.open("/etc/puavo-wlanap/wlan-client.crt", "w") do |file|
  file.puts(wlan_cert)
end

Syslog.info('%s',
            "Access point defaults: wlantype=#{ wlantype } " \
              + "ssid=#{ ssid }")

#
# Get (mandatory) wlan channel parameter from host tags,
# and possibly override other parameters.
#

wlanch = nil           # mandatory parameter to be set with host tag

(File.readlines("#{puavoroot}/hosttags").map &:strip).each do |line|
  set_wlantype = lambda { |type|
                   wlantype = type
                   Syslog.info('%s',
                               "From host tags set wlantype=#{ wlantype }")
                 }

  case line
    when /^wlantype:(.*)$/
      set_wlantype.call($1)
    when 'openwlan'             # XXX for backwards compatibility
      set_wlantype.call('open')
    when 'eapwlan'              # XXX for backwards compatibility
      set_wlantype.call('eap')
    when 'pskwlan'              # XXX for backwards compatibility
      set_wlantype.call('psk')
    when /^wlanch(?:|:)(\d+)$/  # XXX (?:|:) for backwards compatibility
      wlanch = $1
      Syslog.info('%s', "From host tags set wlanch=#{ wlanch }")
    when /^wlanif(?:|:)(\d+)$/  # XXX (?:|:) for backwards compatibility
      wlanif = "wlan#{$1}"
      Syslog.info('%s', "From host tags set wlanif=#{ wlanif }")
    when /^psk:(.*)$/
      password = $1
      Syslog.info('%s', "From host tags set password")
    when /^ssid:(.*)$/
      ssid = $1
      Syslog.info('%s', "From host tags set ssid=#{ ssid }")
  end
end

if not wlanch
  Syslog.info('%s', 'Channel is not set, this host is not an access point')
  exit(0)	# this is a normal condition
end

if not ssid
  Syslog.info('%s', 'Ssid is not set, aborting')
  exit(1)
end

if not %w(open eap psk).include?(wlantype)
  Syslog.info('%s', "Wlantype '#{ wlantype }' is not supported, aborting")
  exit(1)
end

if wlantype == 'psk'
  if password.nil? || password.empty?
    Syslog.info('%s', "Password is not set, yet wlan type is 'psk', aborting")
    exit(1)
  end
  if password.length < 8 || 63 < password.length
    Syslog.info('%s',
                "Password must be between 8-63 characters long, aborting")
    exit(1)
  end
end

File.open("/etc/puavo-wlanap/run.conf", "w") do |config|
  config.puts "wlanif=#{wlanif}"
  config.puts "wlantype=#{wlantype}"
  config.puts "wlanch=#{wlanch}"
  config.puts "serverip=#{server_ip}"
  config.puts "password=#{password}"
  config.puts "ssid=#{ssid}"
end

File.open("/etc/openvpn/puavo-wlanap.conf", "w") do |config|
  config.puts "client"
  config.puts "dev tap0"
  config.puts "remote #{server_fqdn}"
  config.puts "port 956"
  config.puts "proto tcp-client"
  config.puts "up \"/usr/share/puavo-wlanap/openvpn-up.sh\""
  config.puts "down \"/usr/share/puavo-wlanap/openvpn-down.sh\""
  config.puts "ca \"/etc/puavo-wlanap/wlan-ca.crt\""
  config.puts "cert \"/etc/puavo-wlanap/wlan-client.crt\""
  config.puts "key \"/etc/puavo-wlanap/wlan-client.key\""

  config.puts "keepalive 10 60"
  config.puts "persist-tun"
  config.puts "persist-key"
  config.puts "up-delay"
end

Syslog.info('%s', 'Wrote openvpn configurations')

Syslog.close
