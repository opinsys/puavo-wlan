#!/usr/bin/env python

from __future__ import print_function

# Standard library modules
import sys

# Third-party modules
import json
import redis

def _main():
    if len(sys.argv) == 1:
        r = redis.Redis()
        keys = r.keys("puavo-wlancontroller:status:*")

        ap_count    = 0
        radio_count = 0
        sta_count   = 0

        for key in keys:
            status = json.loads(r.get(key))

            radios = status["radios"]
            radio_count += len(radios)

            for radio in radios:
                accesspoints = radio["accesspoints"]
                ap_count += len(accesspoints)

                for accesspoint in accesspoints:
                    sta_count += len(accesspoint["stations"])

        print("accesspoints.value %d" % ap_count)
        print("radios.value %d" % radio_count)
        print("stations.value %d" % sta_count)

        return 0

    if len(sys.argv) == 2:
        if sys.argv[1] == 'autoconf':
            print("yes")
            return 0

        elif sys.argv[1] == 'config':
            print("graph_title Puavo WLAN elements")
            print("graph_args --base 1000 -l 0")
            print("graph_vlabel Count")
            print("graph_category network")
            print("graph_info This graph displays the number of different network elements of Puavo WLAN.")

            print("accesspoints.label accesspoints")
            print("accesspoints.min 0")
            print("accesspoints.draw LINE2")
            print("accesspoints.info The number of Puavo WLAN accesspoints.")

            print("radios.label radios")
            print("radios.min 0")
            print("radios.draw LINE2")
            print("radios.info The number of radios in Puavo WLAN accesspoints.")

            print("stations.label stations")
            print("stations.min 0")
            print("stations.draw LINE2")
            print("stations.info The number of stations connected to Puavo WLAN accesspoints.")

            return 0

    return 1

if __name__ == "__main__":
    sys.exit(_main())
