#!/usr/bin/env python

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
# 02110-1301 USA.

#%# family=auto contrib
#%# capabilities=autoconf suggest

from __future__ import print_function

# Standard library modules
import re
import sys

# Third-party modules
import json
import redis

PROGNAME_PATTERN = re.compile(r'^(?:.*?/)*puavo-wlan-elements_([^/]+)$')

def _main():
    ap_hostname = None

    match = PROGNAME_PATTERN.match(sys.argv[0])
    if match:
        ap_hostname = match.group(1)

    if len(sys.argv) == 1:

        if ap_hostname is None:
            print("ERROR: please call configured wildcard plugin links instead",
                  file=sys.stderr)
            return 1

        r = redis.Redis()

        key         = "puavo-wlancontroller:status:%s" % ap_hostname
        status_json = r.get(key)
        status      = json.loads(status_json)
        radios      = status["radios"]

        ap_count    = 0
        radio_count = len(radios)
        sta_count   = 0

        for radio in radios:
            accesspoints = radio["accesspoints"]
            ap_count += len(accesspoints)

            for accesspoint in accesspoints:
                sta_count += len(accesspoint["stations"])

        print("accesspoints.value %d" % ap_count)
        print("radios.value %d" % radio_count)
        print("stations.value %d" % sta_count)

        return 0

    if len(sys.argv) == 2:
        if sys.argv[1] == 'autoconf':
            print("yes")
            return 0

        if sys.argv[1] == 'config':
            print("graph_title Puavo WLAN elements by host %s" % ap_hostname)
            print("graph_args --base 1000 -l 0")
            print("graph_vlabel Count")
            print("graph_category network")
            print("graph_info This graph displays the number of different Puavo WLAN elements by host %s." % ap_hostname)

            print("accesspoints.label accesspoints")
            print("accesspoints.min 0")
            print("accesspoints.draw LINE2")
            print("accesspoints.info The number of accesspoints.")

            print("radios.label radios")
            print("radios.min 0")
            print("radios.draw LINE2")
            print("radios.info The number of radios.")

            print("stations.label stations")
            print("stations.min 0")
            print("stations.draw LINE2")
            print("stations.info The number of connected stations.")

            return 0

        if sys.argv[1] == "suggest":
            r = redis.Redis()
            keys = r.keys("puavo-wlancontroller:status:*")

            ap_count    = 0
            radio_count = 0
            sta_count   = 0

            for key in sorted(keys):
                _, _, hostname = key.partition("puavo-wlancontroller:status:")
                print(hostname)

            return 0

    return 1

if __name__ == "__main__":
    sys.exit(_main())
