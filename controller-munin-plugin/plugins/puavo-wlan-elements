#!/usr/bin/env python

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
# 02110-1301 USA.

# Multigraph plugin for showing Puavo WLAN elements totals and per AP.

#%# family=auto contrib
#%# capabilities=autoconf

from __future__ import print_function

# Standard library modules
import sys

# Third-party modules
import json
import redis

def _main():
    if len(sys.argv) == 1:
        redisconn     = redis.Redis()
        keys          = redisconn.keys("puavo-wlancontroller:status:*")

        total_ap_count    = 0
        total_radio_count = 0
        total_sta_count   = 0

        output_lines  = []

        for key in keys:
            status         = json.loads(redisconn.get(key))
            radios         = status["radios"]
            _, _, hostname = key.partition("puavo-wlancontroller:status:")

            total_radio_count += len(radios)

            host_ap_count    = 0
            host_sta_count   = 0

            for radio in radios:
                accesspoints = radio["accesspoints"]

                host_ap_count  += len(accesspoints)
                total_ap_count += len(accesspoints)

                for accesspoint in radio["accesspoints"]:
                    host_sta_count  += len(accesspoint["stations"])
                    total_sta_count += len(accesspoint["stations"])

            # Munin uses dash ('-') for separating components in its
            # .rrd files, so we need to replace all dashes to not
            # break anything.
            multigraph_key = hostname.replace("-", "_")

            output_lines.append("multigraph puavo_wlan_elements.{}".format(multigraph_key))
            output_lines.append("accesspoints.value {}".format(host_ap_count))
            output_lines.append("radios.value {}".format(len(radios)))
            output_lines.append("stations.value {}".format(host_sta_count))

        output_lines.insert(0, "multigraph puavo_wlan_elements")
        output_lines.insert(1, "accesspoints.value {}".format(total_ap_count))
        output_lines.insert(2, "radios.value {}".format(total_radio_count))
        output_lines.insert(3, "stations.value {}".format(total_sta_count))

        for output_line in output_lines:
            print(output_line)

        return 0

    if len(sys.argv) == 2:
        if sys.argv[1] == 'autoconf':
            print("yes")
            return 0

        elif sys.argv[1] == 'config':
            print("multigraph puavo_wlan_elements")

            print("graph_title Puavo WLAN elements")
            print("graph_args --base 1000 -l 0")
            print("graph_vlabel Count")
            print("graph_category network")
            print("graph_info This graph shows the number of Puavo WLAN elements.")

            print("accesspoints.label accesspoints")
            print("accesspoints.min 0")
            print("accesspoints.draw LINE2")
            print("accesspoints.info The number of accesspoints.")

            print("radios.label radios")
            print("radios.min 0")
            print("radios.draw LINE2")
            print("radios.info The number of radios.")

            print("stations.label stations")
            print("stations.min 0")
            print("stations.draw LINE2")
            print("stations.info The number of stations.")

            redisconn = redis.Redis()
            keys      = redisconn.keys("puavo-wlancontroller:status:*")

            for key in sorted(keys):
                _, _, hostname = key.partition("puavo-wlancontroller:status:")

                # Munin uses dash ('-') for separating components in its
                # .rrd files, so we need to replace all dashes to not
                # break anything.
                multigraph_key = hostname.replace("-", "_")

                print("multigraph puavo_wlan_elements.{}".format(multigraph_key))

                print("graph_title Puavo WLAN elements on host {}".format(hostname))
                print("graph_args --base 1000 -l 0")
                print("graph_vlabel Count")
                print("graph_category network")
                print("graph_info This graph shows the number of Puavo WLAN elements on host {}.".format(hostname))

                print("accesspoints.label accesspoints")
                print("accesspoints.min 0")
                print("accesspoints.draw LINE2")
                print("accesspoints.info The number of accesspoints running on {}.".format(hostname))

                print("radios.label radios")
                print("radios.min 0")
                print("radios.draw LINE2")
                print("radios.info The number of radios on host {}.".format(hostname))

                print("stations.label stations")
                print("stations.min 0")
                print("stations.draw LINE2")
                print("stations.info The number of stations connected to {}.".format(hostname))

            return 0

    return 1

if __name__ == "__main__":
    sys.exit(_main())
