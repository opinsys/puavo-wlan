#!/usr/bin/env python
#
# Copyright (C) 2015 Opinsys Oy
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

from __future__ import division
from __future__ import print_function

import csv
import math
import sys

import matplotlib.pyplot as plt
import mpl_toolkits.axes_grid1
import numpy as np
import scipy.interpolate

def heatmap(subplot, img, xs, ys, zs):
    img_h, img_w, _ = img.shape

    ## Interpolate z-values throughout the 2D-space using linear radial
    ## basis function.
    rbf = scipy.interpolate.Rbf(xs, ys, zs, function='linear')
    spc_xs, spc_ys = [v.flatten() for v in np.meshgrid(range(img_w), range(img_h))]
    array2d = rbf(spc_xs, spc_ys).reshape((img_h, img_w))

    heatmap_image = subplot.imshow(array2d,
                                   extent=(0, img_w, img_h, 0),
                                   cmap='RdYlBu_r')

    subplot.imshow(img, interpolation='bicubic')

    return heatmap_image

def heatmap_grid(img, xs, ys, title_zs_map, ncols=3, ylabel=''):
    nrows = int(math.ceil(len(title_zs_map) / ncols))
    subplot_grid = mpl_toolkits.axes_grid1.AxesGrid(plt.figure(), 111,
                                                    nrows_ncols=(nrows, ncols),
                                                    axes_pad=0.5,
                                                    share_all=True,
                                                    cbar_location="right",
                                                    cbar_mode="single",
                                                    cbar_size="3%")

    for title, subplot in zip(title_zs_map, subplot_grid):
        subplot.xaxis.set_visible(False)
        subplot.yaxis.set_visible(False)
        subplot.set_title(title)
        heatmap_image = heatmap(subplot, img, xs, ys, title_zs_map[title])

    subplot_grid.cbar_axes[0].colorbar(heatmap_image)
    subplot_grid.cbar_axes[0].set_ylabel(ylabel)

    plt.show()

def heatmap_single(img, xs, ys, zs, ylabel=''):
    heatmap_image = heatmap(plt.subplot(), img, xs, ys, zs)
    plt.colorbar(heatmap_image).set_label(ylabel)

    plt.show()

def main():
    bssid_rssi_map = {}

    xs = []
    ys = []

    with open(sys.argv[1]) as csvfile:
        columns = zip(*csv.reader(csvfile))
        xs = [int(v) for v in columns[0][1:]]
        ys = [int(v) for v in columns[1][1:]]
        for column in columns[2:]:
            bssid = column[0]
            rssis = [int(v) for v in column[1:]]
            bssid_rssi_map[bssid] = rssis

    img = plt.imread(sys.argv[2])

    heatmap_grid(img, xs, ys, bssid_rssi_map, ylabel='dBm')
    heatmap_single(img, xs, ys, [max(v) for v in zip(*bssid_rssi_map.values())], ylabel='dBm')

if __name__ == "__main__":
    main()
