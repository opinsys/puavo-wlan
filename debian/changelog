puavo-wlan (0.12.3) trusty; urgency=medium

  * New release
  * controller/ui: show AP Rx/Tx rates instead of sums
  * controller: round prettified bytes
  * ap: report current Rx/Tx rates to the controller
  * controller, ap: rename /v1/host => /v1/status
  * Git(bf6019c897ea6e320c9ee05e9967ebd42f45511f)

 -- Tuomas Räsänen <tuomasjjrasanen@tjjr.fi>  Tue, 05 Jan 2016 09:54:31 +0200

puavo-wlan (0.12.2) trusty; urgency=medium

  * New release
  * controller: set the ping interval to 30sec
  * Git(c0d63f0f2a3bd1db5e9dd5b64335b1408c2e3a70)

 -- Tuomas Räsänen <tuomasjjrasanen@tjjr.fi>  Tue, 15 Dec 2015 16:00:29 +0200

puavo-wlan (0.12.1) trusty; urgency=medium

  * New release
  * Add ruby1.9.1-dev to build dependencies
  * Git(68ce59194e967eb2ba4591ea93708a3698059e12)

 -- Tuomas Räsänen <tuomasjjrasanen@tjjr.fi>  Tue, 15 Dec 2015 15:09:03 +0200

puavo-wlan (0.12.0) trusty; urgency=medium

  * New release
  * controller/ui: display the number of stations in Radios table
  * controller/ui: display the number of radios in Host table
  * controller/ui: fix indentation of the index template
  * controller/ui: rename few column headers
  * controller/ui: switch station's rx and tx
  * controller/ui: display channel and tx power limit in Radios table
  * controller/ui: rename column header
  * controller/ui: use stable sorting
  * controller/ui: display all totals with bold font
  * controller/ui: display tx power limit column
  * controller/ui: display load average columns
  * controller: trivial formatting
  * controller/ui: display service uptime column
  * ap: trivial formatting
  * ap: report service start time to the controller
  * controller, ap: include PHYs in status reports
  * ap: collect driver, product and mac info from each PHY
  * ap: report load averages to the controller
  * ap: report uname to the controller
  * controller/ui: display system uptime column
  * ap: report system start time
  * controller, ap: report connection start time instead of uptime
  * controller/ui: do not show AP uptime totals
  * ap: remove corresponding vifs when phy is removed
  * controller/ui: display station counts per host
  * ap: send status report whenever a PHY is removed
  * controller/ui: display accesspoint uptime column
  * controller/ui: display host version column
  * ap: report the current version to the controller
  * Add new package: ruby-puavowlan
  * controller/ui: highlight the current anchor element
  * controller: update v1 API documentation
  * controller, ap: make API more conventional/RESTful
  * ap: notify controller on exit
  * controller: add route for deleting host resources
  * ap: do not include incomplete station objects into status report
  * ap: send controller pings whenever station associates/disassociates
  * ap: ensure status report always has all fields
  * ap: defend properly against controller communication failures
  * controller/ui: add label for auto reload checkbox
  * controller: fix typo
  * controller/ui: add optional auto reloading
  * controller: update API doc example
  * controller: move API doc page template to a separate ERB file
  * controller/ui: visualize host state with a small color mark
  * controller: refactoring, renames, etc.
  * controller: move arp table parsing to separate method
  * controller/ui: move root page template to a separate ERB file
  * controller/ui: remove channel and ssid from Station table
  * controller/ui: use sans-serif fonts
  * controller/ui: show ip addresses of stations
  * controller/ui: make tables 100% wide
  * controller/ui: make the status view more compact
  * controller/ui: use small font to save screen estate
  * controller/ui: show empty fields if arp cache did not contain the
    station mac
  * ap: fix Tx byte count extraction
  * controller/ui: extract station address info form arp cache
  * controller/ui: show access point details in a separate section
  * controller/ui: remove cruft from the CSS file
  * controller/ui: add 1em margin to tables
  * controller: fix status view sorting with custom sort keys
  * ap: report current tx power limits to the controller
  * controller: add total station rx/tx counts to the status view
  * controller: do not show interface start_time on the summary table
  * Report interface start_time instead of age
  * controller: remove 'Last ping' field from the status view
  * controller: remove auto refresh of the status page
  * controller: show all access points in the same table
  * controller: show all connected stations in a separate table
  * ap: remove unnecessary field from station status reports
  * controller: prettify rx/tx byte counts
  * controller: show the age of interfaces in the status view
  * ap: report interface age to the controller
  * controller: rename 'Last seen' => 'Last ping'
  * ap: report rx/tx byte counts
  * controller: add Rx/Tx cumulative byte counters to the status view
  * controller: add 'Last seen' column to the status view
  * ap: do not report num_sta anymore, stations array is enough
  * controller: use the length of stations array instead of num_sta
    field
  * controller: add missing static files
  * controller: simplify API a lot, allow only status updates via ping
    route
  * ap: send full status report in ping requests
  * controller: revise status view
  * controller: accept full status report in ping requests
  * controller: make data serialization permstore's implementation
    detail
  * ap: always send JSON data to controller
  * ap: send stop report to the controller on shutdown
  * ap: fix ping_interval setup
  * ap: just log controller report errors, do not fail
  * ap: send reports to the controller
  * controller: make APs expiration time twice the ping interval
  * controller: make route handlers return nil by default
  * controller: get mac from the query string instead of body json
  * controller: fix typos in API doc
  * controller: fix the documented type of ping_interval_seconds
  * controller: rename ap_expiration_time => ping_interval_seconds
  * controller: rename route variables
  * controller: show apidoc at /v1
  * controller: make /v1 routes more restful
  * controller: remove /v1/status because it is unused
  * controller: display stations on the status page
  * controller: delete sta keys when ap key is deleted
  * controller: expire sta keys when ap key expires
  * controller: accept sta_associate and sta_disassociate reports
  * controller: rename few local variables
  * controller: move the / route to a separate module
  * controller: move /v1 routes to a separate module
  * Add adduser to puavo-wlancontroller's dependencies
  * controller: respond with AP_EXPIRATION_TIME when ap_start is
    received
  * controller: add constant for AP_EXPIRATION_TIME
  * controller: fix upstart job
  * controller: use PUAVO_WLANCONTROLLER_DB_SQLITE3 env if given
  * controller: install Gemfiles too
  * Add python3 to build deps, mapper needs it
  * controller: add debian stuff
  * controller: add install target to Makefile
  * controller: make PermStore a class instead of a module
  * controller: make TempStore a class instead of a module
  * controller: put everything into a common namespace
  * controller: add license headers
  * controller/ui: show the number of controller accesspoints
  * controller: make tempstored ap expire in 20s unless ap_hearbeat is
    received
  * controller: delete ap from tempstore when ap_stop report is received
  * controller: add ap to tempstore only when ap_start report is
    received
  * controller: tempstore accesspoints as a separate entries instead of
    one set
  * controller: do not render ul-tag if no accesspoints exist
  * controller: fall back to text/plain if Accept header is not given
  * controller: respond to text/html GET requests with a complete page
  * controller: initial version
  * ap: fix typo in puavo-wlanap-test.
  * ap: add a helper script for conducting basic adapter tests
  * ap: represent frequency band as a class instead arrays, hashes and
    ints
  * ap: add a phy reference to all vifs
  * ap: add info-level tracing to Dot11::Phy.set_txpower_limit
  * ap: use ip instead of ifconfig
  * ap: limit txpowers to values defined in Puavo
  * ap: rename method Dot11::Phy.set_txpower => set_txpower_limit
  * ap: fix typo
  * ap: handle udev events
  * ap: add method AccessPoint.remove_phy
  * ap: let most commands just fail but catch errors in EXIT trap
  * ap: rename AccessPoint.setup_phy => AccessPoint.add_phy
  * ap: add method Services::Spawnable.kill
  * ap: ignore phys we fail to setup
  * ap: add dedicated method for setting up phys
  * ap: add dedicated method for setting up bridges
  * ap: separate bridge setup from phy setup
  * ap: inline a private function
  * ap: ignore phy if we fail to bring vif up at setup phase
  * ap: ignore phy if we fail to add a vif to it at setup phase
  * ap: ignore phy if we fail to del it's vifs at setup phase
  * ap: add Services::Spawnable.hostapd attr_reader
  * ap: add Services::Spawnable.phy attr_reader
  * ap: add Services::Spawnable.pid attr_reader
  * ap: add Dot11::Phy.name attr_reader
  * ap: pass Hostapd references to HostapdCli constructors
  * ap: move PHY setup to a separate method
  * ap: make bss_index AccessPoint's instance variable
  * ap: remove PHY driver whitelisting
  * ap: rename AccessPoint.start_services => AccessPoint.setup
  * ap: translate udev events to puavo-wlanap control messages
  * ap: speed up hostapd spawnin in case we do get AP-ENABLED
  * ap: use one bridge/vtun per ESS to retain the old behavior
  * ap: make hostapds queue up before spawning to avoid PHY usage
    collisions
  * ap: make hostapd_cli poll for control socket once per 100ms
  * ap: make hostapd_cli wait for hostapd when spawned, not when
    configured
  * Squashed 'mapper/horst/' changes from b3aa265..2dc78a3
  * Squashed 'mapper/horst/' changes from a29bf8e..b3aa265
  * ap: move all service classes to Service module and use Spawnable
    mixin
  * ap: use new service classes for spawning
  * ap: add class HostapdCli
  * ap: add class Hostapd
  * ap: add class Vtund
  * ap: add class Dhclient
  * ap: add method Dot11::Vif.up
  * ap: make a comment more precise
  * ap: inherit HostapdConf and VtundConf from Conf
  * ap: spawn one hostapd per bss per radio
  * ap: add class VtundConf
  * ap: add class HostapdConf
  * ap: remove unnecessary variable Dot11.Phy.index
  * ap: add method Dot11.Phy.set_txpower
  * ap: add method Dot11.Vif.del
  * ap: add method Dot11.Phy.add_vif
  * ap: add attr_reader for Dot11::Vif.name
  * ap: remove really suspicious power save disabling quirk
  * ap: rename Dot11::Phy.phy => Dot11::Phy.name
  * ap: add method Dot11::Phy.each_vif
  * ap: add class Dot11::Vif
  * ap: add method Dot11.each_phy
  * ap: add method Dot11::Phy.ht_capab
  * ap: add method Dot11::Phy.has_supported_driver?
  * ap: add method Dot11::Phy.driver
  * ap: add class Dot11::Phy
  * Git(88d309a21767d3d1561e16f18be6d5baa86fb289)

 -- Tuomas Räsänen <tuomasjjrasanen@tjjr.fi>  Tue, 15 Dec 2015 14:45:14 +0200

puavo-wlan (0.11.0) trusty; urgency=medium

  * New release
  * ap: prepend all log messages with a timestamp
  * ap: add some logging
  * ap: wait max 5sec for hostapd sockets before spawning hostapd_clis
  * ap: define hostapd control interface dir in a global constant
  * ap: add handler stubs for hostapd events
  * ap: add script for translating hostapd actions to control messages
  * ap: define control socket filepath in a global constant
  * ap: remove --rundir
  * ap: use File.flock() to ensure only one instance running
  * ap: allow --vtun-port only once
  * ap: allow --vtun-address only once
  * ap: allow --rundir only once
  * ap: move the function for finding suitable PHYs to Dot11 module
  * ap: remove --network-open
  * ap: remove --no-puavo
  * ap: allow --ctrlmsg only once
  * ap: use the default rundir if --ctrlmsg is used without --rundir
  * Git(a6b524348d85ed2aa12826d4ba1d74b621935056)

 -- Tuomas Räsänen <tuomasjjrasanen@tjjr.fi>  Fri, 23 Oct 2015 14:39:35 +0300

puavo-wlan (0.10.2) trusty; urgency=medium

  * New release
  * ap: fix udev rules to try starting before restarting
  * ap: limit udev rules to just wlan devtypes
  * Git(6e5c5b1202aee025390f77ada9fbd2e43829dec9)

 -- Tuomas Räsänen <tuomasjjrasanen@tjjr.fi>  Wed, 21 Oct 2015 16:57:18 +0300

puavo-wlan (0.10.1) trusty; urgency=medium

  * New release
  * Squashed 'mapper/horst/' changes from 7ba1416..a29bf8e
  * Git(a2831f03bbde16a368fe88daa5c4ff41941a461b)

 -- Tuomas Räsänen <tuomasjjrasanen@tjjr.fi>  Wed, 21 Oct 2015 16:12:33 +0300

puavo-wlan (0.10.0) trusty; urgency=medium

  * New release
  * ap: split start_services() to start_vtunds() and start_hostapds()
  * ap: inline nets to bss list conversion
  * ap: make conf file writers to AccessPoint's private methods
  * ap: simplify sigchld handler
  * ap: write to the control socket inside block
  * ap: sort instance variable definitions alphabetically
  * ap: create ap instance only after all args have been parsed
  * ap: simplify upstart job
  * ap: unify description
  * ap: fix udev rules
  * ap: fix make install
  * ap: remove useless files
  * ap: formatting and renames
  * ap: use fail instead of raise
  * ap: replace pythonism with rubyism
  * ap: move connection closing to a separate private method
  * ap: move connection establishment to a separate private method
  * ap: move connection handling to a separate private method
  * ap: make control socket connection an instance variable
  * ap: rename sigpipe => selfpipe to avoid confusion with SIGPIPE
  * ap: fix control socket timeout
  * ap: fix invalid variable reference
  * ap: move ctrlmsg dispatching to a separate private method
  * ap: handle vtun-up control message in a private method
  * ap: call exit() only from the top-level
  * ap: declare private methods
  * ap: make start_services() an instance method of AccessPoint
  * ap: prefer unless over if ! in simple statements
  * ap: move all Puavo-specific methods to a separate module
  * ap: require Puavo modules after parsing command line options
  * ap: sort command line options alphabetically
  * ap: move acces point -specific constant to class AccessPoint
  * ap: move all constants close to each other
  * ap: move all logging methods to Log module
  * ap: require recommended Puavo modules in main
  * ap: reformat Makefile
  * ap: begin encapsulating operation logic inside AccessPoint class
  * ap: use HT40 SGI capability if hw supports it
  * ap: remove old txpower setting cruft
  * ap: control txpowers via Puavo tags
  * ap: use HT20 SGI capability if hw supports it
  * ap: exit with error if not networks defined
  * ap: exit with error if no interfaces found
  * ap: move use_puavo conditional one step higher
  * ap: rename :psk => :password
  * ap: print warning if Puavo integration is disabled due to LoadError
  * ap: fix fatal signal matching
  * ap: notify mainloop via sigpipe *after* signal has been pushed to
    sigqueue
  * Add mapper back to subdir list
  * ap: log the name of critical service when it dies
  * ap: no need for black magic anymore
  * ap: use error() and warning() to log all messages
  * ap: add WARNING prefix to control socket timeout warning message
  * ap: do not run vtun-down commands
  * ap: show the default vtun address and port in --help
  * ap: remove unused function
  * Remove ap-dnsproxy and ap-mdns
  * ap: add dhclient to dependencies
  * ap: remove all old cruft
  * ap: fix trivial function call error
  * ap: do not use then keyword
  * ap: trivial refactoring
  * ap: add address mask quirks for models 168c0029 and 168c002e
  * ap: fix HT capability deduction
  * ap: get rid of single interface backhaul option
  * ap: fix invalid variable reference
  * ap: trivial formatting
  * ap: fix typo
  * ap: trivial refactoring
  * ap: spawn dhclient also when vtun backhaul is used
  * ap: control messages are oneliners
  * ap: fix hostapd conf templating
  * ap: validate --backhaul arg
  * ap: move all 802.11-specific stuff to Dot11 module
  * ap: just few renames
  * ap: fix vtund to run puavo-wlanap with same rundir on up/down events
  * ap: make the list of supported drivers a global constant
  * ap: move common conf file writing to a separate method
  * ap: write conf files with 0640 permissions
  * ap: just formatting fixes
  * ap: rename --notify => --ctrlmsg
  * ap: send notifications via ctrlsocket
  * ap: receive control message via unix domain socket
  * ap: ignore SIGHUP, SIGUSR1 and SIGUSR2
  * ap: make signal handling much more robust
  * ap: ignore SIGCHLD after a critical service has died
  * ap: simplify process group termination
  * ap: ignore SIGTERM before killing the whole process group
  * ap: use generic --notify instead of --vtun-up/--vtun-down options
  * ap: update USE_PUAVO comments
  * ap: strip useless DEFAULT_ -prefix from global constants
  * ap: streamline backhaul configuration
  * ap: add function for getting the default interface
  * ap: add --backhaul option
  * ap: disable Puavo-integration if Puavo modules are not available
  * ap: add --network-open option to add an open network
  * ap: fix critical service pid tracking
  * ap: add --no-puavo option to disable all communication with Puavo
  * ap: fix kwargs handling
  * ap: serve forever
  * ap: burn bridges on exit
  * ap: add simple handlers for --vtun-up/down options
  * ap: exit if one of the critical child services dies
  * ap: add function for starting all services
  * ap: kill children on exit
  * ap: fix network conf password reference
  * ap: fix off-by-one in hexdigest15()
  * ap: fix vtun up/down commands
  * ap: convert ifup() to generic run_or_fail()
  * ap: add vtund.conf templating
  * ap: rename variables and methods
  * ap: add hostapd.conf templating
  * ap: move Puavo-specific network fetching loop to
    get_nets_from_puavo()
  * ap: do Puavo-specific magic SSID mangling in get_nets_from_puavo()
  * ap: ignore all but 4 first network conf entries
  * ap: add function for generating BSS-specific configurations
  * ap: always use parens in methods calls when passing arguments
  * ap: add function for deducing optimal phy configurations
  * ap: use band ids instead of hw mode chars internally
  * ap: define all supported channels in a hash per band
  * ap: define suitable channels with global constants
  * ap: rename find_nodes() => scan()
  * ap: raise RuntimeError if a command execution fails
  * ap: just formatting fixes
  * ap: add some comments
  * ap: rename fetch_nets() => get_nets_from_puavo()
  * ap: add rdoc markup to the comment header
  * ap: minimize the code in top-level scope
  * ap: move command line handling to the top level
  * ap: raise instead of die
  * ap: simplify IO.popens
  * ap: add function for querying HT capabilities
  * ap: add function for generating bssids
  * ap: add function for getting 15 char hex digest of a string
  * ap: select only "wlan_ap" networks
  * ap: add function for getting WLAN networks from Puavo
  * ap: add function for getting channels in preferred order
  * ap: add function for getting supported channels of an interface
  * ap: rename scan_channels() -> find_nodes()
  * ap: fix scan_channels() to return the success status
  * ap: rename errexit() -> die()
  * ap: refactor arg parsing
  * ap: add function for scanning channels
  * ap: add function for bringing up interfaces
  * ap: add function for iterating through all suitable interfaces
  * ap: add function for getting the HW mode of an interface
  * ap: add function for finding suitable interfaces
  * ap: add function for checking if the interface is wlan interface
  * ap: add function for checking whether an interface has a supported
    driver or not
  * ap: add function for getting the driver name of an interface
  * ap: use EXIT trap to remove the runtime directory
  * ap: use --rundir to change the default runtime directory
  * ap: create runtime directory, /run/puavo-wlanap, on startup
  * ap: use errexit() to exit with an error and a message
  * ap: add --vtun-port option
  * ap: add --vtun-address option
  * ap: begin rewriting in Ruby
  * Git(0f1486f5a5b9be30a7c683825f6a1dae9a78aeee)

 -- Tuomas Räsänen <tuomasjjrasanen@tjjr.fi>  Wed, 21 Oct 2015 15:24:26 +0300

puavo-wlan (0.9.10) trusty; urgency=medium

  * New release
  * mapper: do not emit measurementsChanged if empty spot is moved
  * mapper: do not emit measurementsChanged if empty spot is removed
  * mapper: get the initial channel number from the global channel list
  * mapper: get the upper channel limit from the global channel list
  * mapper: add python3-dateutil to dependencies
  * mapper: use Beacon class to parse horst output
  * mapper: add missing import
  * mapper: make Measurement.pos appear as QPointF, but store it as
    tuple
  * mapper: get as much data as possible from the heatmap generator
  * mapper: rename Frame => Beacon
  * mapper: remove unused code
  * mapper: add classes to represent a measurement and individual frames
  * mapper: change archive prefix
  * mapper: put RSSI spinbox left of the slider
  * mapper: make RSSI spinbox writable
  * mapper: remove unused code
  * mapper: remove "Reset to default settings" button
  * mapper: apply settings automatically after a short delay
  * mapper: remove heatmap scale option
  * Git(36ca74fb7e77c3f540f6bc1e1b4fcbcd1009bd1c)

 -- Tuomas Räsänen <tuomasjjrasanen@tjjr.fi>  Wed, 14 Oct 2015 10:30:43 +0300

puavo-wlan (0.9.9) trusty; urgency=medium

  * New release
  * mapper: update heatmap view immediately when sliders are released
  * mapper: make settings widget's visibility follow heatmap view's
    visiblity
  * mapper: move settings widget to the central widget
  * mapper: render a combined heatmap from selected heatmaps
  * mapper: trivial refactoring
  * Git(4a7e75a33b4933ba93620f82f5b7fc85b2bd470d)

 -- Tuomas Räsänen <tuomasjjrasanen@tjjr.fi>  Wed, 07 Oct 2015 17:18:23 +0300

puavo-wlan (0.9.8) trusty; urgency=medium

  * New release
  * mapper: add "Reset to default settings" button
  * mapper: control spinboxes with sliders
  * mapper: add option for thresholding measurements
  * mapper: remove __future__ imports
  * mapper: remove unused imports
  * mapper: make the last available interface the default
  * mapper: set the default channel dwell time to 250ms
  * mapper: get rid of unnecessary freq => chan workout
  * Git(edba9675a32b6f7c30eae525320b207b2ee551a2)

 -- Tuomas Räsänen <tuomasjjrasanen@tjjr.fi>  Tue, 06 Oct 2015 15:57:40 +0300

puavo-wlan (0.9.7) trusty; urgency=medium

  * New release
  * mapper: reduce the default size of heatmaps
  * mapper: decreate RSSI_MAX from -25dBm to -35dBm
  * mapper: change the RSSI_MIN from -95dBm to -99dBm
  * Squashed 'mapper/horst/' changes from 697f849..7ba1416
  * Git(60a5643e8b5fca46d3c784b2505f8992dadddd5f)

 -- Tuomas Räsänen <tuomasjjrasanen@tjjr.fi>  Wed, 30 Sep 2015 17:07:52 +0300

puavo-wlan (0.9.6) trusty; urgency=medium

  * New release
  * ap: address mask quirk for Qualcomm Atheros AR9287 Wireless Network
    Adapter (PCI-Express)
  * ap: address mask quirk for Qualcomm Atheros AR922X Wireless Network
    Adapter
  * ap: do not set txpower on laptops
  * Git(7a266c7f8ef4dd6fd7a3bb56619fa194c7db7f77)

 -- Tuomas Räsänen <tuomasjjrasanen@tjjr.fi>  Tue, 29 Sep 2015 15:30:19 +0300

puavo-wlan (0.9.5) trusty; urgency=medium

  * New release
  * mapper: sort heatmaps first by SSID, then by BSSID and then by
    frequency
  * mapper: open a project file if given in command line args
  * mapper: sort heatmap rows by frequency and SSID
  * mapper: change the project file extension to .puavo-
    wlanmapper.tar.gz
  * Git(2fdd36fde556f6ecb445e6b1caa3dea909210225)

 -- Tuomas Räsänen <tuomasjjrasanen@tjjr.fi>  Tue, 29 Sep 2015 10:06:56 +0300

puavo-wlan (0.9.4) trusty; urgency=medium

  * New release
  * mapper: pkg-config to build dependencies
  * Git(f91eb19ccc95a08d42b579627679195982556ba0)

 -- Tuomas Räsänen <tuomasjjrasanen@tjjr.fi>  Mon, 28 Sep 2015 11:47:54 +0300

puavo-wlan (0.9.3) trusty; urgency=medium

  * New release
  * mapper: show only ESSIDs in row headings
  * mapper: scale row/column headings dynamically, not just once when
    initialized
  * mapper: list all software dependencies in About
  * mapper: scale row and column heading fonts
  * Git(7a7a82468cf8791038ff96640bfaaa9daf25313f)

 -- Tuomas Räsänen <tuomasjjrasanen@tjjr.fi>  Mon, 28 Sep 2015 11:23:21 +0300

puavo-wlan (0.9.2) trusty; urgency=medium

  * New release
  * Squashed 'mapper/horst/' changes from d05ac43..697f849
  * mapper: add separator to Help menu before About
  * mapper: hide heatmaps (and show hint) whenver less than two spots
  * mapper: refactor (formatting, renames, wrap long lines, etc.)
  * mapper: refactor addHeatmap()
  * mapper: add support for resizing heatmaps
  * mapper: fix heatmap grid layout
  * mapper: let's talk about floor plans instead of layouts
  * mapper: add support for saving previously saved project quickly
    without prompting
  * mapper: improve UX by displaying usage hints in the central widget
  * mapper: hide monitor dock window initially until a project is opened
    or created
  * mapper: disable monitor widget until a project is created or opened
  * mapper: simplify heatmap adding
  * mapper: center heatmap column headings horizontally
  * mapper: align heatmap row headings with the right edge
  * mapper: extract files from tar archives using with-statement
  * mapper: encapsulate all saveable/loadable data in a project class
  * mapper: make horst exit with an error if initial channel selection
    fails
  * mapper: exit with error if given invalid number of command line args
  * mapper: remove useless MonitorWidget.__saveDwell()
  * mapper: get rid of global interfaces list
  * mapper: make mainwindow the parent of graphics scenes
  * mapper: make icons module install target's prerequisite
  * mapper: remove old unused file
  * mapper: move spot data marshalling from MonitorScene to MainWindow
  * mapper: get rid of global _tmpdir
  * mapper: inline __setup* methods
  * mapper: simplify new project dialog
  * mapper: show layout image preview in new project dialog
  * mapper: add puavowlanmapper/__init__.py
  * mapper: show ESSID in heatmap tooltips
  * mapper: update icons
  * mapper: use Ctrl+= shortcut for zoom to fit action
  * mapper: use setup.py and compile icon resources to a module
  * mapper: show heatmap channels columns in ascending order
  * mapper: keep all heatmaps fited in the heatmap view continuously
  * mapper: make the layout pixmap fit in the monitor view initially
  * mapper: provide reasonable minimum size hint for the monitor widget
  * mapper: show essids in heamap scene row headings
  * mapper: store essids in a global dict
  * mapper: do not send SpotModifiedEvents while spot is being moved
  * mapper: add headings for heatmap rows and columns
  * mapper: show heatmap info in tooltips
  * mapper: do not allow user to place spots outside the layout pixmap
  * mapper: move zoom-to-fit -capability to ZoomableGraphicsView
  * mapper: add zoom to fit action for the monitor view
  * mapper: remove useless LayoutScene class
  * mapper: clear scenes properly when creating/opening a project
  * mapper: add layouts to heatmaps
  * mapper: do not post SpotModifiedEvents if measurement is None
  * mapper: update heatmaps whenever measurements have changed
  * mapper: add MonitorScene.measurements() for collection measurements
    from spots
  * mapper: emit MonitorScene.measurementsChanged when any spot has been
    modified
  * mapper: show the heatmap scene in the central widget
  * mapper: add class HeatmapScene for managing heatmaps
  * mapper: add LayoutScene.layoutPixmap()
  * mapper: add class for drawing heatmaps in a thread
  * mapper: move generic background pixmap things to a super class
  * mapper: create just once monitor scene
  * mapper: send custom events every time a spot is modified
  * mapper: make the star animation last approx as long as the
    measurement
  * mapper: move the responsibility of monitor control from scene to
    spots
  * mapper: rename Spot => MonitorSpot
  * mapper: remove the rest of the heatmap stuff from the monitor scene
  * mapper: remove all spot numbering crap
  * mapper: Monitor.started does not convey the spot number anymore
  * mapper: remove the rest of the measurement handling from the scene
  * mapper: make stopMonitoring() accept spot instead of a spot number
  * mapper: make toggleMonitoring() accept spot instead of a spot number
  * mapper: make removeSpot() accept spot instead of a spot number
  * mapper: make stars stand straight initially, no matter how many
    corners they have
  * mapper: refactor star generation
  * mapper: improve spot star's drop shadow
  * mapper: make spot stars stand straight initially
  * mapper: make spot stars isotoxal (yay wikipedia)
  * mapper: make monitor collect and build a complete measurement, not
    just beacons
  * mapper: get rid of Python properties, they are pretty in this case
  * mapper: make monitor maintain a list of essids
  * mapper: make horst output results to stdout instead of a file
  * mapper: make scene household all measurement results
  * mapper: make monitor track the current spot/measurement handle
  * mapper: move monitor toggling logic from spots to the scene
  * mapper: fix pickling to dump data as a byte stream
  * mapper: fix about text
  * mapper: do not show error dialog if the monitor was user-terminated
  * mapper: set the initial monitor interface
  * mapper: visualize scanning progress with a progress bar
  * mapper: depend on python3-pyqt4
  * mapper: depend on python3
  * mapper: switch to Python 3
  * mapper: display horst's error messages in a message box
  * mapper: reset monitored spot also in case of an error
  * mapper: wrap long lines
  * mapper: just internal renames
  * mapper: rename Monitor.stop() => Monitor.terminate()
  * mapper: simplify monitor stopped/started actions
  * mapper: rename MonitorScene.__measurementStopped() =>
    MonitorScene.__monitorStopped()
  * mapper: simplify spot data pickling
  * mapper: remove useless internal measurement copy
  * mapper: rename Monitor.__emit_stopped() => Monitor.__emitStopped()
  * mapper: rename Monitor.errorLog() => Monitor.errorText()
  * mapper: QMainWindow owns the central widget
  * mapper: rename MainWindow.__scene => MainWindow.__monitorScene
  * mapper: remove SceneWidget
  * mapper: show the monitor scene in the monitor widget
  * mapper: remove version number from the About text
  * mapper: layout pixmap is always set via setLayoutPixmap() method
  * mapper: rename ProjectDialog => NewProjectDialog
  * mapper: rename Scene => MonitorScene
  * mapper: rename View => ZoomableGraphicsView
  * mapper: separate project ops (new/open/save) from scene ops
  * mapper: show error log if horst fails
  * mapper: show monitor status
  * mapper: ensure the saved file has .tar.gz extension
  * Git(e3317ec123ebb730f4e8de2e1d5e4c11dfdaf3f5)

 -- Tuomas Räsänen <tuomasjjrasanen@tjjr.fi>  Sat, 26 Sep 2015 20:54:27 +0300

puavo-wlan (0.9.1) trusty; urgency=medium

  * New release
  * mapper: show also channels numbers in the frequency list
  * mapper: just renames
  * mapper: save and load essids
  * mapper: increase the default dwell time step to 50
  * mapper: shorten the default dwell time to 500ms
  * mapper: show ESSIDs too in the BSSID list
  * mapper: fix layout pixmap setup when opening a existing scene file
  * mapper: make Spot.measurement a property
  * mapper: add debian dependencies due to horst bundling
  * mapper: add clean target to Makefile
  * mapper: build and used bundled horst
  * Squashed 'mapper/horst/' content from commit d05ac43
  * mapper: update horst output field parsing
  * mapper: remove interface preparations, horst can do them nowadays
  * Git(c7bcce625264001d2f3904b62e249875a03fe55a)

 -- Tuomas Räsänen <tuomasjjrasanen@tjjr.fi>  Fri, 04 Sep 2015 00:07:49 +0300

puavo-wlan (0.9.0) trusty; urgency=medium

  * New release
  * Git(2d05aeb1d02313fa7b37bb2d131432c504bb8c59)

 -- Tuomas Räsänen <tuomasjjrasanen@tjjr.fi>  Thu, 27 Aug 2015 14:00:20 +0300

puavo-wlan (0.8.0) trusty; urgency=medium

  * Initial release.

 -- Tuomas Räsänen <tuomasjjrasanen@tjjr.fi>  Fri, 27 Mar 2015 14:19:23 +0200
