#!/bin/bash

set -eubm

on_exit()
{
    local -r exitval=$?

    ## Try to make sure that this function is completed.
    set +eu
    trap '' EXIT HUP INT QUIT ABRT ALRM TERM USR1 USR2

    ## Kill our child processes.
    pkill -TERM -P $$

    rm -rf "${PWGW_RUNDIR}"

    exit $exitval
}

pwgw_log()
{
    echo "$(basename $0): $1" >&2
}

read_config()
{
    . "${PWGW_DATADIR}/config"

    ## The user might have deleted the configuration file, that's ok.
    [ -r "${PWGW_CONFDIR}/config" ] && . "${PWGW_CONFDIR}/config"
}

parse_args()
{
    PWGW_ARGS_DAEMON=0

    if [ $# -eq 1 ]; then
        if [ "$1" = "--daemon" ]; then
            PWGW_ARGS_DAEMON=1
            return 0
        fi
        pwgw_log "unexpected argument '$1'"
        echo "Usage: $(basename $0) [--daemon]" >&2
        return 1
    elif [ $# -gt 2 ]; then
        pwgw_log "too many arguments"
        echo "Usage: $(basename $0) [--daemon]" >&2
        return 1
    fi
}

## We don't know yet where our data, libs and configs have been
## installed, but we do know the following script knows it and we do know
## where the following script is (it in PATH!).
. puavo-wlangw-env

read_config

parse_args "$@"

if [ "${PWGW_ARGS_DAEMON}" -ne 0 ]; then
    daemon --noconfig --stderr='daemon.info' --name='puavo-wlangw' -- puavo-wlangw
    exit 0
fi

trap on_exit EXIT

mkdir -p "${PWGW_RUNDIR}"

cp "${PWGW_DATADIR}/vtund.conf" "${PWGW_RUNDIR}"

vtund -s -P "${PWGW_VTUND_PORT}" -n -f "${PWGW_RUNDIR}/vtund.conf" &
vtundpid=$!

ncat -c "${PWGW_LIBDIR}/add-network \"${vtundpid}\" \"${PWGW_RUNDIR}/vtund.conf\" \"${PWGW_BRIDGE}\"" -k -l "${PWGW_PORT}" &

wait
