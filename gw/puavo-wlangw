#!/bin/bash

set -eubm

on_exit()
{
    local -r exitval=$?

    ## Try to make sure that this function is completed.
    set +eu
    trap '' EXIT HUP INT QUIT ABRT ALRM TERM USR1 USR2

    ## Kill our child processes.
    pkill -TERM -P $$

    rm -rf "${PWGW_RUNDIR}"

    exit $exitval
}

pwgw_log()
{
    echo "$(basename $0): $1" >&2
}

parse_args()
{
    local flag

    PWGW_ARGS_DAEMON=0

    while getopts d flag; do
        case "${flag}" in
            d)
                PWGW_ARGS_DAEMON=1
                ;;
            ?)
                pwgw_log "unexpected option '$flag'"
                exit 1;
                ;;
        esac
    done

    shift $(( OPTIND - 1 ));

    if [ $# -ne 1 ]; then
        pwgw_log "wrong number of arguments"
        echo "Usage: $(basename $0) [-d] CONFIG_FILE" >&2
        exit 1
    fi

    PWGW_CONFIG_FILE=$1
}

## It all starts by parsing the command line arguments.
parse_args "$@"

if [ "${PWGW_ARGS_DAEMON}" -ne 0 ]; then
    daemon --noconfig --stderr='daemon.info' --name='puavo-wlangw' -- puavo-wlangw "${PWGW_CONFIG_FILE}"
    exit 0
fi

. "${PWGW_CONFIG_FILE}"

trap on_exit EXIT

mkdir -p "${PWGW_RUNDIR}"

cp "${PWGW_DATADIR}/vtund.conf" "${PWGW_RUNDIR}"

vtund -s -P "${PWGW_PORT_DATA}" -n -f "${PWGW_RUNDIR}/vtund.conf" &
echo $! >"${PWGW_RUNDIR}/vtund.pid"

ncat -c "${PWGW_LIBDIR}/add-network \"${PWGW_RUNDIR}\" \"${PWGW_BRIDGE}\"" -k -l "${PWGW_PORT_CTRL}" &

wait
